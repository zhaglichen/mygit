C51 COMPILER V9.56.0.0   BSP_KEY                                                           03/23/2017 21:47:56 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE BSP_KEY
OBJECT MODULE PLACED IN ..\Output\bsp_key.obj
COMPILER INVOKED BY: D:\Program files\AT89C51\C51\BIN\C51.EXE ..\User\bsp_key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\User)
                    - DEBUG OBJECTEXTEND PRINT(..\Listing\bsp_key.lst) TABS(6) OBJECT(..\Output\bsp_key.obj)

line level    source

   1          #include "bsp_key.h" 
   2          #include "bsp_delay.h" 
   3          
   4          sbit K2 = P2^2;
   5          sbit K3 = P2^3;
   6          sbit K4 = P2^4;
   7          sbit K5 = P2^0;
   8          sbit K1 = P2^1;
   9          
  10          extern u8 location;
  11          extern u8 flag,wei;
  12          extern  number[];
  13          extern  nao[];
  14          
  15          void key_scan()
  16          {
  17   1            
  18   1            if(0 == K4)
  19   1            {
  20   2                  // 按键消抖
  21   2                  delay_ms(5);
  22   2                  if(0 == K4);
  23   2                  if(flag==1)//判断为设置界面
  24   2                  {
  25   3                        switch(wei)       //判断当前闪烁的位并给出相应的限制条件
  26   3                        {
  27   4                              case(0):
  28   4                              if (number[wei]==1 && number[wei+1]>3)
  29   4                              {
  30   5                                    
  31   5                                    number[wei+1] =3;
  32   5                                    number[wei] = number[wei] + 1;
  33   5                              }
  34   4                              else if(number[wei]<2)
  35   4                              {
  36   5                                    number[wei] = number[wei] + 1;
  37   5                              }
  38   4                              
  39   4                              break;
  40   4                              case(1):
  41   4                              if(number[wei-1]!=2)
  42   4                              {
  43   5                                    if(number[wei]<9)
  44   5                                    {
  45   6                                          number[wei] = number[wei] + 1;
  46   6                                    }
  47   5                              }
  48   4                              else
  49   4                              {
  50   5                                    if(number[wei]<3)
  51   5                                    {
  52   6                                          number[wei] = number[wei] + 1;
  53   6                                    }
  54   5                              }
C51 COMPILER V9.56.0.0   BSP_KEY                                                           03/23/2017 21:47:56 PAGE 2   

  55   4                              break;
  56   4                              case(2):
  57   4                              if(number[wei]<5) 
  58   4                              {
  59   5                                    number[wei] = number[wei] + 1;
  60   5                              }
  61   4                              break;
  62   4                              case(3):
  63   4                                    if(number[wei]<9)
  64   4                              {
  65   5                                    number[wei] = number[wei] + 1;
  66   5                              }
  67   4                              break;
  68   4                              case(4):
  69   4                              if (number[wei]<5)
  70   4                              {
  71   5                                    number[wei] = number[wei] + 1;
  72   5                              }
  73   4                              
  74   4                              break;
  75   4                              case(5):
  76   4                                    if(number[wei]<9)
  77   4                              {
  78   5                                    number[wei] = number[wei] + 1;
  79   5                              }
  80   4                              break;
  81   4                        }
  82   3                  }
  83   2                  
  84   2                  if (2==flag)            //判断当前为闹钟界面
  85   2                  {
  86   3                        switch(wei)       //判断当前闪烁的位并给出相应的限制条件
  87   3                        {
  88   4                              case(0):
  89   4                              if (nao[wei]==1 && nao[wei+1]>3)
  90   4                              {
  91   5                                    
  92   5                                    nao[wei+1] =3;
  93   5                                    nao[wei] = nao[wei] + 1;
  94   5                              }
  95   4                              else if(nao[wei]<2)
  96   4                              {
  97   5                                    nao[wei] = nao[wei] + 1;
  98   5                              }
  99   4                              
 100   4                              break;
 101   4                              case(1):
 102   4                              if(nao[wei-1]!=2)
 103   4                              {
 104   5                                    if(nao[wei]<9)
 105   5                                    {
 106   6                                          nao[wei] = nao[wei] + 1;
 107   6                                    }
 108   5                              }
 109   4                              else
 110   4                              {
 111   5                                    if(nao[wei]<3)
 112   5                                    {
 113   6                                          nao[wei] = nao[wei] + 1;
 114   6                                    }
 115   5                              }
 116   4                              break;
C51 COMPILER V9.56.0.0   BSP_KEY                                                           03/23/2017 21:47:56 PAGE 3   

 117   4                              case(2):
 118   4                              if(nao[wei]<5)    
 119   4                              {
 120   5                                    nao[wei] = nao[wei] + 1;
 121   5                              }
 122   4                              break;
 123   4                              case(3):
 124   4                                    if(nao[wei]<9)
 125   4                              {
 126   5                                    nao[wei] = nao[wei] + 1;
 127   5                              }
 128   4                              break;
 129   4                        }
 130   3                  }
 131   2                  
 132   2                  // 松手检测
 133   2                  while(0 == K4);
 134   2            }
 135   1            
 136   1            if(0 == K3)
 137   1            {
 138   2                  // 按键消抖
 139   2                  delay_ms(5);
 140   2                  if(0 == K3)
 141   2                  {
 142   3                        if (flag<2) //以0 1 2 的状态方式切换
 143   3                        {
 144   4                              flag+=1;
 145   4                              TR0=0;
 146   4                        }
 147   3                        else
 148   3                        {
 149   4                              flag=0;
 150   4                              TR0=1;
 151   4                        }
 152   3                        
 153   3                  }
 154   2                  
 155   2                  // 松手检测
 156   2                  while(0 == K3);
 157   2            }
 158   1      
 159   1            if(0 == K2)
 160   1            {
 161   2                  delay_ms(5);      //时间调整和闹钟的设置界面的减法设置
 162   2                  if(0 == K2);
 163   2                  if(flag==1)
 164   2                  {
 165   3                        
 166   3                              if(0 != number[wei])  //因为每位的最低位是相同的所以代码可以简化为同一条代码
 167   3                              {
 168   4                                    number[wei] = number[wei] - 1;
 169   4                              }
 170   3                        
 171   3                  }
 172   2                  
 173   2                  if(flag==2)
 174   2                  {
 175   3                        
 176   3                              if(0 != nao[wei])
 177   3                              {
 178   4                                    nao[wei] = nao[wei] - 1;
C51 COMPILER V9.56.0.0   BSP_KEY                                                           03/23/2017 21:47:56 PAGE 4   

 179   4                              }
 180   3                        
 181   3                  }
 182   2                  
 183   2                  // 松手检测
 184   2                  while(0 == K2);
 185   2            }
 186   1            if(0 == K5)
 187   1            {
 188   2                  delay_ms(5);
 189   2                  if(0 == K5)
 190   2                  {
 191   3                        if(5 != wei)
 192   3                        {
 193   4                              wei= wei+1;
 194   4      
 195   4                        }
 196   3                        
 197   3                  }
 198   2                  
 199   2                  // 松手检测
 200   2                  while(0 == K5);
 201   2            }
 202   1            if(0 == K1)
 203   1            {
 204   2                  delay_ms(5);
 205   2                  if(0 == K1)
 206   2                  {
 207   3                        
 208   3                         if(0!=wei)
 209   3                        {
 210   4                              wei=wei-1;
 211   4      
 212   4                        }
 213   3                  }
 214   2                  
 215   2                  // 松手检测
 216   2                  while(0 == K1);
 217   2            }
 218   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    855    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
